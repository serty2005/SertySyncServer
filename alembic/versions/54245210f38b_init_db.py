"""Init_db

Revision ID: 54245210f38b
Revises: 
Create Date: 2025-04-21 02:55:30.032744

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '54245210f38b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company',
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('revision', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('billing_inn', sqlmodel.sql.sqltypes.AutoString(length=12), nullable=False),
    sa.Column('iiko_inn', sqlmodel.sql.sqltypes.AutoString(length=12), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('company', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_company_billing_inn'), ['billing_inn'], unique=True)
        batch_op.create_index(batch_op.f('ix_company_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_company_iiko_inn'), ['iiko_inn'], unique=True)
        batch_op.create_index(batch_op.f('ix_company_name'), ['name'], unique=False)

    op.create_table('server',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('server_type', sa.Enum('RMS', 'CHAIN', name='servertype'), nullable=False),
    sa.Column('iiko_uid', sqlmodel.sql.sqltypes.AutoString(length=11), nullable=False),
    sa.Column('license_type', sa.Enum('LIFETIME', 'CLOUD', name='licensetype'), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('connection_details', sa.JSON(), nullable=True),
    sa.Column('partner_portal_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('revision', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('server', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_server_address'), ['address'], unique=False)
        batch_op.create_index(batch_op.f('ix_server_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_server_iiko_uid'), ['iiko_uid'], unique=True)
        batch_op.create_index(batch_op.f('ix_server_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_server_partner_portal_id'), ['partner_portal_id'], unique=False)

    op.create_table('point',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('revision', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('company_id', sa.Uuid(), nullable=False),
    sa.Column('server_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['server_id'], ['server.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('point', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_point_company_id'), ['company_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_point_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_point_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_point_server_id'), ['server_id'], unique=False)

    op.create_table('workstation',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('connection_details', sa.JSON(), nullable=True),
    sa.Column('extra_equipment', sa.JSON(), nullable=True),
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('revision', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('point_id', sa.Uuid(), nullable=False),
    sa.Column('server_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['point_id'], ['point.id'], ),
    sa.ForeignKeyConstraint(['server_id'], ['server.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('workstation', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_workstation_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_workstation_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_workstation_point_id'), ['point_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_workstation_server_id'), ['server_id'], unique=False)

    op.create_table('fiscalregistrar',
    sa.Column('model', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('serial_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('registration_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('registered_entity_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fiscal_drive_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_registration_date', sa.DateTime(), nullable=True),
    sa.Column('fiscal_drive_expiry_date', sa.Date(), nullable=True),
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('revision', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('workstation_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['workstation_id'], ['workstation.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('fiscalregistrar', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_fiscalregistrar_fiscal_drive_number'), ['fiscal_drive_number'], unique=True)
        batch_op.create_index(batch_op.f('ix_fiscalregistrar_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_fiscalregistrar_model'), ['model'], unique=False)
        batch_op.create_index(batch_op.f('ix_fiscalregistrar_registration_number'), ['registration_number'], unique=True)
        batch_op.create_index(batch_op.f('ix_fiscalregistrar_serial_number'), ['serial_number'], unique=True)
        batch_op.create_index(batch_op.f('ix_fiscalregistrar_workstation_id'), ['workstation_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('fiscalregistrar', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_fiscalregistrar_workstation_id'))
        batch_op.drop_index(batch_op.f('ix_fiscalregistrar_serial_number'))
        batch_op.drop_index(batch_op.f('ix_fiscalregistrar_registration_number'))
        batch_op.drop_index(batch_op.f('ix_fiscalregistrar_model'))
        batch_op.drop_index(batch_op.f('ix_fiscalregistrar_id'))
        batch_op.drop_index(batch_op.f('ix_fiscalregistrar_fiscal_drive_number'))

    op.drop_table('fiscalregistrar')
    with op.batch_alter_table('workstation', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_workstation_server_id'))
        batch_op.drop_index(batch_op.f('ix_workstation_point_id'))
        batch_op.drop_index(batch_op.f('ix_workstation_name'))
        batch_op.drop_index(batch_op.f('ix_workstation_id'))

    op.drop_table('workstation')
    with op.batch_alter_table('point', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_point_server_id'))
        batch_op.drop_index(batch_op.f('ix_point_name'))
        batch_op.drop_index(batch_op.f('ix_point_id'))
        batch_op.drop_index(batch_op.f('ix_point_company_id'))

    op.drop_table('point')
    with op.batch_alter_table('server', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_server_partner_portal_id'))
        batch_op.drop_index(batch_op.f('ix_server_name'))
        batch_op.drop_index(batch_op.f('ix_server_iiko_uid'))
        batch_op.drop_index(batch_op.f('ix_server_id'))
        batch_op.drop_index(batch_op.f('ix_server_address'))

    op.drop_table('server')
    with op.batch_alter_table('company', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_company_name'))
        batch_op.drop_index(batch_op.f('ix_company_iiko_inn'))
        batch_op.drop_index(batch_op.f('ix_company_id'))
        batch_op.drop_index(batch_op.f('ix_company_billing_inn'))

    op.drop_table('company')
    # ### end Alembic commands ###
